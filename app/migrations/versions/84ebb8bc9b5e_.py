"""empty message

Revision ID: 84ebb8bc9b5e
Revises: 
Create Date: 2018-02-18 21:10:47.104638

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '84ebb8bc9b5e'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('users')
    op.drop_table('networks')
    op.drop_table('groups')
    op.drop_table('usersip')
    op.drop_table('tarifs')
    op.drop_table('address')
    op.drop_table('admin_user')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('admin_user',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('login', sa.VARCHAR(length=20), autoincrement=False, nullable=False),
    sa.Column('password', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('username', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('create', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('email', sa.VARCHAR(length=120), autoincrement=False, nullable=True),
    sa.Column('activ', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='admin_user_pkey'),
    sa.UniqueConstraint('login', name='admin_user_login_key')
    )
    op.create_table('address',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('uid', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('address', sa.VARCHAR(length=300), autoincrement=False, nullable=True),
    sa.Column('street', sa.VARCHAR(length=80), autoincrement=False, nullable=True),
    sa.Column('building', sa.VARCHAR(length=10), autoincrement=False, nullable=True),
    sa.Column('flat', sa.VARCHAR(length=10), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['uid'], ['users.uid'], name='address_uid_fkey'),
    sa.PrimaryKeyConstraint('id', name='address_pkey'),
    sa.UniqueConstraint('uid', name='address_uid_key')
    )
    op.create_table('tarifs',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('uid', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('day_fee', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('activ_day_fee', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('descr', sa.VARCHAR(length=200), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['uid'], ['users.uid'], name='tarifs_uid_fkey'),
    sa.PrimaryKeyConstraint('id', name='tarifs_pkey'),
    sa.UniqueConstraint('uid', name='tarifs_uid_key')
    )
    op.create_table('usersip',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('uid', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('balance', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('registration', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('reduction', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('reduction_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('credit', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('credit_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('archive', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('contract_id', sa.VARCHAR(length=25), autoincrement=False, nullable=True),
    sa.Column('contract_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('pasport_num', sa.VARCHAR(length=25), autoincrement=False, nullable=True),
    sa.Column('pasport_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('telegram', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('telegram_send', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('vk', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('vk_send', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['uid'], ['users.uid'], name='usersip_uid_fkey'),
    sa.PrimaryKeyConstraint('id', name='usersip_pkey'),
    sa.UniqueConstraint('uid', name='usersip_uid_key')
    )
    op.create_table('groups',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('uid', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('descr', sa.VARCHAR(length=200), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['uid'], ['users.uid'], name='groups_uid_fkey'),
    sa.PrimaryKeyConstraint('id', name='groups_pkey'),
    sa.UniqueConstraint('uid', name='groups_uid_key')
    )
    op.create_table('networks',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('uid', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('ip', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('netmask', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('cid', sa.VARCHAR(length=17), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['uid'], ['users.uid'], name='networks_uid_fkey'),
    sa.PrimaryKeyConstraint('id', name='networks_pkey'),
    sa.UniqueConstraint('uid', name='networks_uid_key')
    )
    op.create_table('users',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('uid', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('login', sa.VARCHAR(length=20), autoincrement=False, nullable=False),
    sa.Column('password', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('fio', sa.VARCHAR(length=150), autoincrement=False, nullable=True),
    sa.Column('phone', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('descr', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('disable', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('delete', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='users_pkey'),
    sa.UniqueConstraint('login', name='users_login_key'),
    sa.UniqueConstraint('uid', name='users_uid_key')
    )
    # ### end Alembic commands ###
